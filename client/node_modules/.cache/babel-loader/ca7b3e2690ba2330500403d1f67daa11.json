{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Gautam\\\\Desktop\\\\curious fella\\\\web development\\\\React Projects\\\\ProductReview-V1\\\\client\\\\src\\\\components\\\\AddNewPost\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Grid } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\n\nconst Form = _ref => {\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // if (currentId === 0) {\n    //     dispatch(createPost(postData));\n    //     clear();\n    // } else {\n    //     dispatch(updatePost(currentId, postData));\n    //     clear();\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"thi is form\") // <Paper className={classes.paper}>\n  //     <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n  //         <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n  //         <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n  //         <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n  //         <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n  //         <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n  //         <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n  //         <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n  //         <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n  //     </form>\n  // </Paper>\n  ;\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","Grid","useDispatch","useSelector","FileBase","useStyles","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","clear","handleSubmit","e","preventDefault"],"sources":["C:/Users/Aditya Gautam/Desktop/curious fella/web development/React Projects/ProductReview-V1/client/src/components/AddNewPost/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper, Grid } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport useStyles from './styles';\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n    const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (post) setPostData(post);\r\n    }, [post]);\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // if (currentId === 0) {\r\n        //     dispatch(createPost(postData));\r\n        //     clear();\r\n        // } else {\r\n        //     dispatch(updatePost(currentId, postData));\r\n        //     clear();\r\n        // }\r\n    };\r\n\r\n    return (<h1>thi is form</h1>\r\n        // <Paper className={classes.paper}>\r\n        //     <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        //         <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\r\n        //         <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n        //         <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        //         <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        //         <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n        //         <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n        //         <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        //         <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n        //     </form>\r\n        // </Paper>\r\n    );\r\n};\r\n\r\nexport default Form;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,KAAxC,EAA+CC,IAA/C,QAA2D,mBAA3D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;AAGA,MAAMC,IAAI,GAAG,QAAiC;EAAA,IAAhC;IAAEC,SAAF;IAAaC;EAAb,CAAgC;EAC1C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;IAAEgB,OAAO,EAAE,EAAX;IAAeC,KAAK,EAAE,EAAtB;IAA0BC,OAAO,EAAE,EAAnC;IAAuCC,IAAI,EAAE,EAA7C;IAAiDC,YAAY,EAAE;EAA/D,CAAD,CAAxC;EACA,MAAMC,IAAI,GAAGb,WAAW,CAAEc,KAAD,IAAYV,SAAS,GAAGU,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAkBN,OAAD,IAAaA,OAAO,CAACO,GAAR,KAAgBb,SAA9C,CAAH,GAA8D,IAApF,CAAxB;EACA,MAAMc,QAAQ,GAAGnB,WAAW,EAA5B;EACA,MAAMoB,OAAO,GAAGjB,SAAS,EAAzB;EAEAT,SAAS,CAAC,MAAM;IACZ,IAAIoB,IAAJ,EAAUN,WAAW,CAACM,IAAD,CAAX;EACb,CAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;EAIA,MAAMO,KAAK,GAAG,MAAM;IAChBf,YAAY,CAAC,CAAD,CAAZ;IACAE,WAAW,CAAC;MAAEC,OAAO,EAAE,EAAX;MAAeC,KAAK,EAAE,EAAtB;MAA0BC,OAAO,EAAE,EAAnC;MAAuCC,IAAI,EAAE,EAA7C;MAAiDC,YAAY,EAAE;IAA/D,CAAD,CAAX;EACH,CAHD;;EAKA,MAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;IAC9BA,CAAC,CAACC,cAAF,GAD8B,CAG9B;IACA;IACA;IACA;IACA;IACA;IACA;EACH,CAVD;;EAYA,oBAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAAR,CACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAZJ;AAcH,CAzCD;;AA2CA,eAAepB,IAAf"},"metadata":{},"sourceType":"module"}